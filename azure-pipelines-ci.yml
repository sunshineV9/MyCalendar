trigger:
- master

pool:
  vmImage: 'macos-latest'

name: $(Date:yyMMdd)$(Rev:rr)

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

jobs:
- job: build_android
  displayName: 'Android'
  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: android-manifest-version@1
    inputs:
      sourcePath: MyCalendar/MyCalendar.Mobile/MyCalendar.Mobile.Android/Properties/AndroidManifest.xml
      versionCodeOption: 'buildid'
      versionCode: '$(Build.BuildNumber)'
      versionCodeOffset: '0'
      versionName: '1.0.$(Build.BuildId)'
      printFile: false

  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/*droid*.csproj'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'

- job: build_iOS
  displayName: 'iOS'
  steps:
  # To manually select a Xamarin SDK version on the Microsoft-hosted macOS agent,
  # configure this task with the *Mono* version that is associated with the
  # Xamarin SDK version that you need, and set the "enabled" property to true.
  # See https://go.microsoft.com/fwlink/?linkid=871629
  - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
    displayName: 'Select the Xamarin SDK version'
    enabled: false

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: ios-bundle-version@1
    inputs:
      sourcePath: 'MyCalendar/MyCalendar.Mobile/MyCalendar.Mobile.iOS/Info.plist'
      versionCodeOption: 'buildid'
      versionCode: '$(Build.BuildNumber)'
      versionCodeOffset: '0'
      versionName: '1.0.$(Build.BuildId)'
      printFile: false

  - task: XamariniOS@2
    inputs:
      solutionFile: '**/*.sln'
      configuration: '$(buildConfiguration)'
      buildForSimulator: true
      packageApp: false