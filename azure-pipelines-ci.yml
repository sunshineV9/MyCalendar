trigger:
  batch: true
  branches:
    include:
    - master

pool:
  vmImage: 'macos-latest'

name: $(Date:yyMMdd)$(Rev:rr)

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

jobs:
- job: build_android
  displayName: 'Android'
  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: android-manifest-version@1
    inputs:
      sourcePath: 'MyCalendar/MyCalendar.Mobile/MyCalendar.Mobile.Android/Properties/AndroidManifest.xml'
      versionCodeOption: 'buildid'
      versionCode: '$(Build.BuildNumber)'
      printFile: false

  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/*droid*.csproj'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'

  - task: AndroidSigning@3
    inputs:
      apkFiles: '$(outputDirectory)/*.apk'
      apksignerKeystoreFile: 'MyCalendar.keystore'
      apksignerKeystorePassword: '$(keystore-password)'
      apksignerKeystoreAlias: '$(key-alias)'
      apksignerKeyPassword: '$(key-password)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(outputDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

- job: build_iOS
  displayName: 'iOS'
  steps:
  - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(Xamarin SDK Version)
    displayName: 'Select Xamarin SDK Version...'
    enabled: true

  - script: sudo xcode-select -s /Applications/Xcode_$(XCode Version).app/Contents/Developer
    displayName: 'Select Xcode Version...'
    enabled: true

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: XamariniOS@2
    inputs:
      solutionFile: '**/*.sln'
      configuration: '$(buildConfiguration)'
      buildForSimulator: true
      packageApp: false